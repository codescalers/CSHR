export { default } from './MultiSelect.svelte';
// get the label key from an option object or the option itself if it's a string or number
export const get_label = (op) => (op instanceof Object ? op.label : op);
// fallback on label if option is object and value is undefined
export const get_value = (op) => op instanceof Object ? op.value ?? op.label : op;
// Firefox lacks support for scrollIntoViewIfNeeded, see
// https://github.com/janosh/svelte-multiselect/issues/87
// this polyfill was copied from
// https://github.com/nuxodin/lazyfill/blob/a8e63/polyfills/Element/prototype/scrollIntoViewIfNeeded.js
if (typeof Element !== `undefined` &&
    !Element.prototype?.scrollIntoViewIfNeeded) {
    Element.prototype.scrollIntoViewIfNeeded = function (centerIfNeeded = true) {
        const el = this;
        new IntersectionObserver(function ([entry]) {
            const ratio = entry.intersectionRatio;
            if (ratio < 1) {
                const place = ratio <= 0 && centerIfNeeded ? `center` : `nearest`;
                el.scrollIntoView({
                    block: place,
                    inline: place,
                });
            }
            this.disconnect();
        }).observe(this);
    };
}
