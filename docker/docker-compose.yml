version: "3"

services:
  postgres_db:
    image: postgres:latest
    container_name: postgres_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cshr-network

  redis_db:
    image: "redis:latest"
    container_name: redis_db
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cshr-network

  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    ports:
      - "8000:8000"
    environment:
      # Machine access
      - SSH_KEY=${SSH_KEY}
      # Backend configurations
      - ENV=${ENV}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      # Mail service configurations
      - EMAIL=${EMAIL}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_HOST=${EMAIL_HOST}
      # Servers configurations
      - SERVER_DOMAIN_NAME=${SERVER_DOMAIN_NAME}
      - CLIENT_DOMAIN_NAME=${CLIENT_DOMAIN_NAME}
      # Database configurations
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_PORT=${DATABASE_PORT}

      - REDIS_HOST=redis://redis_db:6379
      - DATABASE_HOST=postgres_db
    depends_on:
      - redis_db
      - postgres_db
    volumes:
      - backend_media:/server_dir/server/mediafiles/profile_image
    networks:
      - cshr-network

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    ports:
      - "8080:80"
    environment:
      - SERVER_DOMAIN_NAME_API=${SERVER_DOMAIN_NAME_API}
    depends_on:
      - backend
    networks:
      - cshr-network

volumes:
  postgres_data:
  redis_data:
  backend_media:

networks:
  cshr-network:
  backend_media:
